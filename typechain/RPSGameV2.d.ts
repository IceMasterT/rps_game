/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface RPSGameV2Interface extends ethers.utils.Interface {
  functions: {
    "moves(address)": FunctionFragment;
    "revealMove(uint8,bytes32)": FunctionFragment;
    "revealMoveStart()": FunctionFragment;
    "submitMove(bytes32)": FunctionFragment;
    "submitMoveStart()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "moves", values: [string]): string;
  encodeFunctionData(
    functionFragment: "revealMove",
    values: [BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "revealMoveStart",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "submitMove",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "submitMoveStart",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "moves", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "revealMove", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "revealMoveStart",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "submitMove", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "submitMoveStart",
    data: BytesLike
  ): Result;

  events: {};
}

export class RPSGameV2 extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: RPSGameV2Interface;

  functions: {
    moves(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    "moves(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<{
      0: string;
    }>;

    revealMove(
      _move: BigNumberish,
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: void;
    }>;

    "revealMove(uint8,bytes32)"(
      _move: BigNumberish,
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<{
      0: void;
    }>;

    revealMoveStart(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "revealMoveStart()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    submitMove(
      _moveHash: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "submitMove(bytes32)"(
      _moveHash: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    submitMoveStart(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;

    "submitMoveStart()"(overrides?: CallOverrides): Promise<{
      0: BigNumber;
    }>;
  };

  moves(arg0: string, overrides?: CallOverrides): Promise<string>;

  "moves(address)"(arg0: string, overrides?: CallOverrides): Promise<string>;

  revealMove(
    _move: BigNumberish,
    salt: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  "revealMove(uint8,bytes32)"(
    _move: BigNumberish,
    salt: BytesLike,
    overrides?: CallOverrides
  ): Promise<void>;

  revealMoveStart(overrides?: CallOverrides): Promise<BigNumber>;

  "revealMoveStart()"(overrides?: CallOverrides): Promise<BigNumber>;

  submitMove(
    _moveHash: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "submitMove(bytes32)"(
    _moveHash: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  submitMoveStart(overrides?: CallOverrides): Promise<BigNumber>;

  "submitMoveStart()"(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    moves(arg0: string, overrides?: CallOverrides): Promise<string>;

    "moves(address)"(arg0: string, overrides?: CallOverrides): Promise<string>;

    revealMove(
      _move: BigNumberish,
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "revealMove(uint8,bytes32)"(
      _move: BigNumberish,
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    revealMoveStart(overrides?: CallOverrides): Promise<BigNumber>;

    "revealMoveStart()"(overrides?: CallOverrides): Promise<BigNumber>;

    submitMove(_moveHash: BytesLike, overrides?: CallOverrides): Promise<void>;

    "submitMove(bytes32)"(
      _moveHash: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    submitMoveStart(overrides?: CallOverrides): Promise<BigNumber>;

    "submitMoveStart()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    moves(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "moves(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    revealMove(
      _move: BigNumberish,
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "revealMove(uint8,bytes32)"(
      _move: BigNumberish,
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    revealMoveStart(overrides?: CallOverrides): Promise<BigNumber>;

    "revealMoveStart()"(overrides?: CallOverrides): Promise<BigNumber>;

    submitMove(_moveHash: BytesLike, overrides?: Overrides): Promise<BigNumber>;

    "submitMove(bytes32)"(
      _moveHash: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    submitMoveStart(overrides?: CallOverrides): Promise<BigNumber>;

    "submitMoveStart()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    moves(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "moves(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    revealMove(
      _move: BigNumberish,
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "revealMove(uint8,bytes32)"(
      _move: BigNumberish,
      salt: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    revealMoveStart(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "revealMoveStart()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    submitMove(
      _moveHash: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "submitMove(bytes32)"(
      _moveHash: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    submitMoveStart(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "submitMoveStart()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
